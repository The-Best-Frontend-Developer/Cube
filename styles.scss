:root {
  --width: 15vw;
  --mainColor: dodgerblue;
  --red: 50;
  --green: 150;
  --blue: 255;
  --perspective: 1000px;
  --transition: 0.4s;
}

body {
  display: flex;
  position: relative;
  justify-content: center;
  align-items: center;
  height: 100dvh;
  margin: 0;
  background-color: #222;
  perspective: var(--perspective);
  scrollbar-width: none;
}
/* Перспектива через perspective дается контейнеру, но нужна элементам*/

.shadow {
  position: absolute;
  top: 50vh;
  left: 50vw;
  border-radius: 50%;
  box-shadow: 0 0 50vh 30vh rgba(255, 255, 255, 0.5);
}

.perspectiveContainer {
  width: var(--width);
  aspect-ratio: 1; /* Высота повторяется за шириной: если ширина 50, то и высота тоже */
  position: relative;
  transform-style: preserve-3d;
  transition: var(--transition);
  animation: rotating 6s ease-in-out infinite;
  transform: rotateX(-20deg) rotateY(-20deg);
}
/* preserve-3d чтобы элементы были 3d */

.face {
  display: flex;
  justify-content: center;
  align-items: center;

  position: absolute;
  width: var(--width);
  height: var(--width);
  background: rgba(0, 0, 0, 0.3);
  border: 0.5px solid var(--mainColor);
  box-shadow: 0 0 0.375vh 0.125vh rgba(var(--red), var(--green), var(--blue), 0.3), inset 0 0 6.25vh 1.25vh rgba(var(--red), var(--green), var(--blue), 0.3);
  font-size: clamp(15px, 2vw, 50px);
  color: white;
}

// translateZ меняет положение элемента относительно оси Z то есть вглубину,
// rotateX или rotateY вращает по осям X и Y соответственно

.front {
  transform: translateZ(calc(var(--width) / 2));
}

.back {
  transform: rotateY(180deg) translateZ(calc(var(--width) / 2));
}

.top {
  transform: rotateX(90deg) translateZ(calc(var(--width) / 2));
}

.bottom {
  transform: rotateX(-90deg) translateZ(calc(var(--width) / 2));
}

.left {
  transform: rotateY(-90deg) translateZ(calc(var(--width) / 2));
}

.right {
  transform: rotateY(90deg) translateZ(calc(var(--width) / 2));
}

.colors {
  display: flex;
  position: absolute;
  flex-wrap: wrap;
  top: 20px;
  left: 20px;
  gap: 30px;
}

.color {
  width: 6vh;
  aspect-ratio: 1;
  border-radius: 50%;
  border: none;
}

.colors > :nth-child(1) {
  background-color: dodgerblue;
}

.colors > :nth-child(2) {
  background-color: red;
}

.colors > :nth-child(3) {
  background-color: lawngreen;
}

.colors > :nth-child(4) {
  background-color: deeppink;
}

.colors > :nth-child(5) {
  background-color: yellow;
}

.perspective {
  position: absolute;
  display: flex;
  flex-direction: column;
  padding: max(4px, 1vw);
  background-color: coral;
  border-radius: 10px;
  gap: 20px;
  bottom: 20px;
  left: 20px;
}

.perspectiveButton {
  background-color: antiquewhite;
  border: 1px solid dodgerblue;
  border-radius: 5px;
  font-size: clamp(7px, 1vw, 20px);
}

.perspectiveButton.active {
  border: 1px solid darkred;
  background-color: grey;
}

@media (max-width: 500px) {
  :root {
    --width: 25vw;
  }
}